/* COMPLEX JOINS
Find the sales rep in each region with largets sales total 
First we establish the rep, region and SUM(sales) this will be T3
Then with SubQuery we find the max sales for each region
Then we pull elements from T3 (rep, region, SUM(sales))
And create join clause T2 & T3 so it all fits */
SELECT T3.repName,
T3.regionName,
T3.total_amt
FROM
  (SELECT regionName,
  MAX(total_amt) max_sales
  FROM
    (SELECT s.name repName,
    r.name regionName,
    SUM(total_amt_usd) total_amt
    FROM orders o
    JOIN accounts a
    ON o.account_id = a.id
    JOIN sales_reps s
    ON a.sales_rep_id = s.id
    JOIN region r
    ON s.region_id = r.id
    GROUP BY 1,2
    ORDER BY 3 DESC) T1
  GROUP BY 1
  ORDER BY 2) T2
JOIN
  (SELECT s.name repName,
  r.name regionName,
  SUM(total_amt_usd) total_amt
  FROM orders o
  JOIN accounts a
  ON o.account_id = a.id
  JOIN sales_reps s
  ON a.sales_rep_id = s.id
  JOIN region r
  ON s.region_id = r.id
  GROUP BY 1,2
  ORDER BY 3 DESC) T3
ON T2.regionName = T3.regionName AND T2.max_sales = T3.total_amt

/* For the region with the largest (sum) of sales total_amt_usd,
how many total (count) orders were placed? 
First find the region totals,
Then find that MAx/highest region through SubQuery - Northeast
Then create new table with HAVING clause comparing the SUMs */
SELECT r.name regionName,
COUNT(o.total) total_orders
FROM region r
JOIN sales_reps s
ON r.id = s.region_id
JOIN accounts a
ON a.sales_rep_id = s.id
JOIN orders o
ON o.account_id = a.id
GROUP BY 1
HAVING SUM(o.total_amt_usd) =
  (SELECT MAX(total_amt) max_total
  FROM
    (SELECT r.name regionName,
    SUM(o.total_amt_usd) total_amt
    FROM region r
    JOIN sales_reps s
    ON r.id = s.region_id
    JOIN accounts a
    ON a.sales_rep_id = s.id
    JOIN orders o
    ON o.account_id = a.id
    GROUP BY 1
    ORDER BY 2 DESC) T1);

/* TEMP_TABLES 
How many accounts had more total purchases than,
account bought the most STANDARD_QTY paper throughout lifetime?
First, find total standard_qty for accounts AND ORDER_TOTAL, LIMIT to top sales
Now compare other accounts ORDER_TOTAL
COUNT that final result
*/
SELECT COUNT(*)
FROM
  (SELECT a.name account
  FROM orders o
  JOIN accounts a
  ON o.account_id = a.id
  GROUP BY 1
  HAVING SUM(o.total) >
  (SELECT order_total
  FROM
    (SELECT a.name accountName,
    SUM(o.standard_qty) standard_total,
    SUM(o.total) order_total
    FROM orders o
    JOIN accounts a
    ON o.account_id = a.id
    GROUP BY 1
    ORDER BY 2 DESC
    LIMIT 1) T1))
counter;


/* COMPLEX JOINS 
For the customer that spent the most (in total over their lifetime as a customer)
total_amt_usd, how many web_events did they have for each channel? 
First, get all accounts total sales and LIMIT to 1
Then JOIN by web_events account ID and COUNT */
SELECT a.id accountID,
w.channel channel,
COUNT(*) num_events
FROM accounts a
JOIN web_events w
ON a.id = w.account_id AND a.id = (SELECT accountID
  FROM
    (SELECT a.id accountID,
    a.name accountName,
    SUM(o.total_amt_usd) total_lifetime
    FROM orders o
    JOIN accounts a
    ON o.account_id = a.id
    GROUP BY 1,2
    ORDER BY 3 DESC
    LIMIT 1) T1)
GROUP BY 1,2
ORDER BY 3 DESC;

/* What is the lifetime average amount spent in terms of total_amt_usd
for the top 10 total spending accounts? 
Easy - find the top 10 lifetime sales
AVG for all */
SELECT AVG(total_sales) as avg_lifetime_sales
FROM
  (SELECT a.name accountName,
  a.id accountID,
  SUM(o.total_amt_usd) total_sales
  FROM orders o
  JOIN accounts a
  ON o.account_id = a.id
  GROUP BY 1,2
  ORDER BY 3 DESC
  LIMIT 10) T1


/* TEMP_TABLES 
What is the lifetime average amount spent in terms of total_amt_usd,
for only companies that spent more per order, on average, than the average of all orders. */
SELECT AVG(avg_total)
FROM
  (SELECT o.account_id accountID,
  AVG(o.total_amt_usd) AS avg_total
  FROM orders o
  GROUP BY 1
  HAVING AVG(total_amt_usd) > 
    (SELECT AVG(o.total_amt_usd) avg_total_sales
    FROM orders o)) T1;
